//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace OctoStyle.Core.Tests.Unit {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class FileContents {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal FileContents() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("OctoStyle.Core.Tests.Unit.FileContents", typeof(FileContents).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to diff --git a/src/TestLibrary/Nested/TestClass2.cs b/src/TestLibrary/Nested/TestClass2.cs
        ///new file mode 100644
        ///index 0000000..f6876ed
        ///--- /dev/null
        ///+++ b/src/TestLibrary/Nested/TestClass2.cs
        ///@@ -0,0 +1,14 @@
        ///+﻿//test
        ///+namespace TestLibrary
        ///+{
        ///+    public class TestClass2
        ///+    {
        ///+        public void testMethod()
        ///+        {
        ///+            foreach (var i in new [] {1,2,3,4})
        ///+            {
        ///+                var TestVar = 3;
        ///+            }
        ///+        }
        ///+    }
        ///+}
        ///diff --git a/src/TestLibrary/Nested/TestClass3.cs b/src [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string FullDiff {
            get {
                return ResourceManager.GetString("FullDiff", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to diff --git a/src/TestLibrary/Nested/TestClass2.cs b/src/TestLibrary/Nested/TestClass2.cs
        ///new file mode 100644
        ///index 0000000..f6876ed
        ///--- /dev/null
        ///+++ b/src/TestLibrary/Nested/TestClass2.cs
        ///@@ -0,0 +1,14 @@
        ///+﻿//test
        ///+namespace TestLibrary
        ///+{
        ///+    public class TestClass2
        ///+    {
        ///+        public void testMethod()
        ///+        {
        ///+            foreach (var i in new [] {1,2,3,4})
        ///+            {
        ///+                var TestVar = 3;
        ///+            }
        ///+        }
        ///+    }
        ///.
        /// </summary>
        internal static string TestClass2CsDiff {
            get {
                return ResourceManager.GetString("TestClass2CsDiff", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to //test
        ///namespace TestLibrary
        ///{
        ///    public class TestClass2
        ///    {
        ///        public void testMethod()
        ///        {
        ///            foreach (var i in new [] {1,2,3,4})
        ///            {
        ///                var TestVar = 3;
        ///            }
        ///        }
        ///    }
        ///}
        ///.
        /// </summary>
        internal static string TestClass2CsNew {
            get {
                return ResourceManager.GetString("TestClass2CsNew", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to namespace TestLibrary
        ///{
        ///    public class TestClass2
        ///    {
        ///        public void testMethod()
        ///        {
        ///            foreach (var i in new [] {1,2,3,4})
        ///            {
        ///                
        ///            }
        ///            foreach (var b in new[] { 1, 2, 3, 4 })
        ///            {
        ///
        ///            }
        ///        }
        ///    }
        ///}
        ///.
        /// </summary>
        internal static string TestClass2CsOld {
            get {
                return ResourceManager.GetString("TestClass2CsOld", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to diff --git a/src/TestLibrary/Nested/TestClass3.cs b/src/TestLibrary/Nested/TestClass3.cs
        ///+}
        ///new file mode 100644
        ///index 0000000..c537e3f
        ///--- /dev/null
        ///+++ b/src/TestLibrary/Nested/TestClass3.cs
        ///@@ -0,0 +1,12 @@
        ///+﻿using System;
        ///+using System.Collections.Generic;
        ///+using System.Linq;
        ///+using System.Text;
        ///+using System.Threading.Tasks;
        ///+
        ///+namespace TestLibrary.Nested
        ///+{
        ///+    class TestClass3
        ///+    {
        ///+    }
        ///+}
        ///.
        /// </summary>
        internal static string TestClass3CsDiff {
            get {
                return ResourceManager.GetString("TestClass3CsDiff", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to diff --git a/src/TestLibrary/TestClass.cs b/src/TestLibrary/TestClass.cs
        ///index ef72072..85ce506 100644
        ///--- a/src/TestLibrary/TestClass.cs
        ///+++ b/src/TestLibrary/TestClass.cs
        ///@@ -17,5 +17,13 @@ public void TestMethod()
        ///             }
        ///             2.ToString();
        ///         }
        ///+
        ///+        public void Testmethod2()
        ///+        {
        ///+            for (int i = 5 - 1; i &gt;= 0; i--)
        ///+            {
        ///+            }
        ///+            Console.WriteLine(&quot;Test output&quot;);
        ///+        }
        ///     }
        /// }
        ///\ No newline at end of file
        ///.
        /// </summary>
        internal static string TestClassCsDiff {
            get {
                return ResourceManager.GetString("TestClassCsDiff", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to diff --git a/src/TestLibrary/TestLibrary.csproj b/src/TestLibrary/TestLibrary.csproj
        ///index e29f3ed..47c7471 100644
        ///--- a/src/TestLibrary/TestLibrary.csproj
        ///+++ b/src/TestLibrary/TestLibrary.csproj
        ///@@ -30,13 +30,12 @@
        ///     &lt;WarningLevel&gt;4&lt;/WarningLevel&gt;
        ///   &lt;/PropertyGroup&gt;
        ///   &lt;ItemGroup&gt;
        ///+    &lt;Compile Include=&quot;Nested\TestClass3.cs&quot; /&gt;
        ///     &lt;Compile Include=&quot;Properties\AssemblyInfo.cs&quot; /&gt;
        ///     &lt;Compile Include=&quot;TestClass.cs&quot; /&gt;
        ///-    &lt;Compile Include=&quot;TestClass2.cs&quot; /&gt;
        ///-  &lt;/ItemGroup&gt;
        ///-  &lt;ItemGrou [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string TestLibraryCsprojDiff {
            get {
                return ResourceManager.GetString("TestLibraryCsprojDiff", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;
        ///&lt;Project ToolsVersion=&quot;12.0&quot; DefaultTargets=&quot;Build&quot; xmlns=&quot;http://schemas.microsoft.com/developer/msbuild/2003&quot;&gt;
        ///  &lt;Import Project=&quot;$(MSBuildExtensionsPath)\$(MSBuildToolsVersion)\Microsoft.Common.props&quot; Condition=&quot;Exists(&apos;$(MSBuildExtensionsPath)\$(MSBuildToolsVersion)\Microsoft.Common.props&apos;)&quot; /&gt;
        ///  &lt;PropertyGroup&gt;
        ///    &lt;Configuration Condition=&quot; &apos;$(Configuration)&apos; == &apos;&apos; &quot;&gt;Debug&lt;/Configuration&gt;
        ///    &lt;Platform Condition=&quot; &apos;$(Platform)&apos; == &apos;&apos; &quot;&gt;AnyCPU&lt;/Platform&gt;
        ///    [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string TestLibraryCsprojNew {
            get {
                return ResourceManager.GetString("TestLibraryCsprojNew", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;
        ///&lt;Project ToolsVersion=&quot;12.0&quot; DefaultTargets=&quot;Build&quot; xmlns=&quot;http://schemas.microsoft.com/developer/msbuild/2003&quot;&gt;
        ///  &lt;Import Project=&quot;$(MSBuildExtensionsPath)\$(MSBuildToolsVersion)\Microsoft.Common.props&quot; Condition=&quot;Exists(&apos;$(MSBuildExtensionsPath)\$(MSBuildToolsVersion)\Microsoft.Common.props&apos;)&quot; /&gt;
        ///  &lt;PropertyGroup&gt;
        ///    &lt;Configuration Condition=&quot; &apos;$(Configuration)&apos; == &apos;&apos; &quot;&gt;Debug&lt;/Configuration&gt;
        ///    &lt;Platform Condition=&quot; &apos;$(Platform)&apos; == &apos;&apos; &quot;&gt;AnyCPU&lt;/Platform&gt;
        ///    [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string TestLibraryCsprojOld {
            get {
                return ResourceManager.GetString("TestLibraryCsprojOld", resourceCulture);
            }
        }
    }
}
